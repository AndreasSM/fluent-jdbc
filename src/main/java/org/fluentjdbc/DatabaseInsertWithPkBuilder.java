package org.fluentjdbc;

import org.fluentjdbc.util.ExceptionUtil;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;

public class DatabaseInsertWithPkBuilder extends DatabaseStatement {

    private DatabaseInsertBuilder insertBuilder;
    private Object idValue;

    public DatabaseInsertWithPkBuilder(DatabaseInsertBuilder insertBuilder, Object idValue) {
        this.insertBuilder = insertBuilder;
        this.idValue = idValue;
    }

    public DatabaseInsertWithPkBuilder setField(String fieldName, Object parameter) {
        insertBuilder.setField(fieldName, parameter);
        return this;
    }

    public DatabaseInsertWithPkBuilder setFields(List<String> fields, List<Object> values) {
        insertBuilder.setFields(fields, values);
        return this;
    }

    public Object execute(Connection connection) {
        Object idValue = this.idValue;
        if (idValue == null) {
            return insertWithAutogeneratedKey(connection);
        } else {
            insertWithPregeneratedKey(connection);
            return idValue;
        }
    }

    private void insertWithPregeneratedKey(Connection connection) {
        assert idValue != null;
        logger.debug(createInsertStatement());
        try (PreparedStatement stmt = connection.prepareStatement(createInsertStatement())) {
            bindParameters(stmt, insertBuilder.getParameters());
            stmt.executeUpdate();
        } catch (SQLException e) {
            throw ExceptionUtil.softenCheckedException(e);
        }
    }

    // TODO: This doesn't work for Android - we need to do select last_insert_rowid() explicitly (or update SQLDroid)
    private Object insertWithAutogeneratedKey(Connection connection) {
        logger.debug(createInsertStatement());
        try (PreparedStatement stmt = connection.prepareStatement(createInsertStatement(), Statement.RETURN_GENERATED_KEYS)) {
            bindParameters(stmt, insertBuilder.getParameters());
            stmt.executeUpdate();

            try (ResultSet generatedKeys = stmt.getGeneratedKeys()) {
                generatedKeys.next();
                return generatedKeys.getLong(1);
            }
        } catch (SQLException e) {
            throw ExceptionUtil.softenCheckedException(e);
        }
    }

    private String createInsertStatement() {
        return insertBuilder.createInsertStatement();
    }

}
